.background {
    background: black;
    width: 100%;
    min-height: calc(100vh - 10rem);
    margin-top: 4rem;
    position: relative;
}

.backgroundImg {
    height: 100%;
    width: 100%;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    opacity: 0.5;
    object-fit: cover;
}

.section {
    max-width: 1200px;
    margin: auto;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.contact {
    max-width: 1200px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-around;
}

.head {
    display: flex;
    flex-direction: column;
    padding-top: 3rem;
    align-self: center;
    z-index: 0;

}

.header {
    color: white;
    font-size: 2.5rem;
    opacity: 1;
}

.line {
    width: 100%;
    height: 0.3rem;
    background-color: rgb(var(--colorLogin));
}

/* START of contact links */

.content {
    width: 100%;
    display: flex;
    flex-direction: column;
    flex: 1;
    padding: 1.5rem;
}

.contentItem {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 1.5rem;
    text-decoration: none;
}

.content .contentItem:nth-child(1) {
    animation: shiftFromLeft .8s 0s ease-out both;
}

.content .contentItem:nth-child(2) {
    animation: shiftFromLeft .8s .25s ease-out both;
}

.content .contentItem:nth-child(3) {
    animation: shiftFromLeft 1s .5s ease-out both;
}

.content .contentItem:nth-child(4) {
    animation: shiftFromLeft .8s .75s ease-out both;
}

.content .contentItem:nth-child(5) {
    animation: shiftFromLeft .8s 1s ease-out both;
}

@keyframes shiftFromLeft {
    0% {
        opacity: 0;
        transform: translateX(-30%);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

.contentItem:active {
    background-color: rgba(var(--accent), 0.4);
}

.contentIcon {
    width: 6rem;
    height: 4rem;
    border: rgb(var(--accent)) solid 2px;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: 0 0 20px rgba(0, 200, 0, 0.8);
}

.svg {
    height: 100%;
    width: 100%;
    padding: 0.3rem;
}

.contentIcon:hover {
    background-color: rgba(var(--accent), 0.2);
}

.contentDesc {
    width: 100%;
    padding: 1rem;
    color: white;
    font-size: 1.5rem;
    text-align: center;
}

/* END of contact links */

/* START of form */

.formContainer {
    padding: 1.5rem;
    width: 100%;
    flex: 1;
    position: relative;
}

.form {
    width: 100%;
    padding: 1.5rem;

    display: flex;
    flex-direction: column;
    position: relative;
}

.inputContainer {
    width: 100%;
    position: relative;
}

.input {
    width: 100%;
    padding: 1rem;
    margin-bottom: 3rem;
    align-self: center;
    background-color: rgba(255, 255, 255, .2);
    border: 2px transparent solid;
    color: white;
    font-size: 1.5rem;
    outline: none;
}

/* custom scroll bar in textarea */
textarea::-webkit-scrollbar {
    width: 0.2rem;
}

textarea::-webkit-scrollbar-track {
    box-shadow: inset 0 0 5px grey;
}

textarea::-webkit-scrollbar-thumb {
    background: rgba(var(--accent), 0.5);
    border-radius: 999px;
}

.inputIsInvalid {
    border: red 1px solid;
}

.label {
    font-size: 1.5rem;
    padding: 1rem;
    color: rgb(190, 190, 190);
    position: absolute;
    left: 0;
    top: 0;
    pointer-events: none;
    white-space: nowrap;
    transition: 0.5s ease;
}

.isValid {
    position: absolute;
    bottom: 2rem;
    left: 0;
    color: red;
    font-size: 0.8rem;
}

.input:focus+.label,
.input:required:valid+.label {
    /* to work in htmml must be required:true*/
    display: flex;
    transform: scale(0.7) translate(-1rem, -4rem);
    color: rgb(var(--accent));
}

.input:focus {
    border-left: green .3rem solid;
    border-right: green .3rem solid;
}

/* Change background and color if input is autocompleate ;) */
.input:-webkit-autofill,
.input:-webkit-autofill:hover,
.input:-webkit-autofill:focus,
.input:-webkit-autofill:active {
    transition: background-color 5000s ease-in-out 0s, color 9999s ease-in-out 0s;
}

.input::placeholder {
    color: rgb(190, 190, 190);
}

.btn {
    align-self: flex-end;
    font-size: 1.5rem;
    background-color: transparent;
    border: 2px solid rgb(var(--accent));
    color: white;
    padding: 0.5rem 2rem;
    cursor: pointer;
    outline: none;
}

.btn:hover {
    background-color: rgba(var(--accent), 0.4);
}

.btn:active {
    background-color: rgba(var(--accent), 0.8);
    box-shadow: 0 0 40px rgba(var(--accent), 0.8);
}

.formAnim {
    animation: formAnimation 4s ease-in forwards;
}

@keyframes formAnimation {
    25% {
        transform: scale(0, 0);
        opacity: 0;
    }

    75% {
        transform: scale(0, 0);
        opacity: 1;
    }
}

.envelope {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    transform: scale(0, 0);
}

.envelopeAnim {
    animation: envelopeAnimation 4s 0.5s ease-in forwards;
}

@keyframes envelopeAnimation {
    25% {
        transform: scale(0.2, 0.2) translateX(0) rotate(0);
        opacity: 1;
    }

    50% {
        transform: scale(0.2, 0.2) translateX(0) rotate(0);
        opacity: 1;
    }

    75% {
        transform: scale(0.2, 0.2) translateX(1000%) rotate(720deg);
        opacity: 0;
    }

    100% {
        opacity: 0;
    }
}

.svgOkId {
    opacity: 0;
}

.svgOkIdAnim {
    animation: envelopeSvgOkIdAnimation 4s 0.5s ease-in;
}

@keyframes envelopeSvgOkIdAnimation {
    0% {
        opacity: 0;
    }

    25% {
        opacity: 0;
    }

    40% {
        opacity: 1;
    }
}



/* END of form */

@media (min-width: 500px) {

    .contentItem {
        flex-direction: row;
    }

    .contentDesc {
        text-align: start;
    }
}

@media (min-width: 1000px) {
    .contact {
        flex-direction: row;
    }
}